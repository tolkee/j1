/* eslint-disable */
/**
 * Generated API types for Convex functions - Task Management
 * This file is auto-generated by running: task convex:sync-api
 */

import { FunctionReference, anyApi } from "convex/server";
import { GenericId as Id } from "convex/values";

export const api: PublicApiType = anyApi as unknown as PublicApiType;
export const internal: InternalApiType = anyApi as unknown as InternalApiType;

// Placeholder types - will be auto-generated when you run task convex:sync-api
export type PublicApiType = {
  auth: {
    isAuthenticated: FunctionReference<"query", "public", Record<string, never>, any>;
    signIn: FunctionReference<"action", "public", any, any>;
    signOut: FunctionReference<"action", "public", Record<string, never>, any>;
  };
  tasks: {
    projects: {
      list: FunctionReference<"query", "public", any, any>;
      create: FunctionReference<"mutation", "public", any, any>;
      update: FunctionReference<"mutation", "public", any, any>;
      remove: FunctionReference<"mutation", "public", any, any>;
    };
    tasks: {
      list: FunctionReference<"query", "public", any, any>;
      create: FunctionReference<"mutation", "public", any, any>;
      update: FunctionReference<"mutation", "public", any, any>;
      remove: FunctionReference<"mutation", "public", any, any>;
    };
  };
  users: {
    getCurrentUser: FunctionReference<"query", "public", any, any>;
    updateProfile: FunctionReference<"mutation", "public", any, any>;
  };
};

export type InternalApiType = {
  // Internal functions will be generated here
};